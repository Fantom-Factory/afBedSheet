
For BedSheet 0.0.6
------------------   

fantom afIoc on T5
  

For BedSheet 0.0.8
------------------
 - (doc) ie cache buster
 - (doc) err handling
 - (doc) 404 and 500
 - (doc) Config

Req -> HttpReq
Res -> HttpRes

 - redirect
 
 - @Config { ... def="wotever" }
   - use TypeCoercer

 - PathMapRoute / RouteLikeDraft

 - style BedSheet status pages 
  - More custom Err handling
  
 front all services with mixins
   - note that methods NEED to be public in order to be advised 
   
 - basic welcome page (see Draft)
 
 - log filter (see Draft for format)

Fantom - TRAP! FileWeblet - if (mime?.mediaType == "text" && ae.contains("gzip"))
Fantom - redirect HTTP 1.1 -> 303, HTTP 1.0 -> 302?

 
Future
------
 - have Dev / Prod mode (and other envs)

static files & pod files served under 'hash' folder
 - Asset class, File field and genned file field
 
template files served under version number

RequireJS module support 

use the tales JS compiler! A bloody neat idea!

Pluggable Template generation
 - moustacheSource - to cache Moustaches 
 - tales

 Tales
http://fantom.org/sidewalk/topic/1290
 - tales routing
Look into integrating other tales stuff

Move the non-standard filters (Cors / IE) out into an afBedSheetUtils pod

Create an afBedSheetProtection pod, based on Rubys Rack::Protection
 

Doc Comments
------------

Wot should be returned for redirects? Str is overused: mustache, html, xml, etc... 
e.g. what should each do? 
 - how to distinquish between pod resource and file resource -> is there?
  - both return a file, diff handlers for diff uris.

how to return a redirect?
 - should uri's be resolved?  

Play on words from Tapestry, and Fantom ghosty wears a BedSheet! Wot Fantom wears!

"A web app framework that gets you horizontal. What's your favourite position?"

horizonal not vertical - other frameworks make you extend their classes, not BedSheet!



Powerful.
---------
Built in a modular way with [afIoc]`http://repo.status302.com/doc/afIoc/#overview` meaning every service maybe wrapped,
decorated, replaced or deleted! It makes hard tasks, easy.

Flexible.
---------
Show a developer a really cool feature and the first response is usually, "Wow, that's awewome! ... But how do I turn it off?"
With that in mind, BedSheet is reluctant

Simple.
-------
Developers are lazy. If it's complicated or difficult, they won't use it.




Good Stuff
 - ajax responses are gzipped by default
 - cache headers are set from ajax calls from IE
 