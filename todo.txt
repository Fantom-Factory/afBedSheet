
After Ioc1.5 - blog how to instantiate a 2nd Filehandler to map 2 dirs to the one url

Doc customising the ErrPrinters! Make them public?



For BedSheet 1.3.16
--------------------
Run BedSheet under https...?
Add HttpRequest.isSecure()
 - find out how to tell


Future
------
1.4.0 - Middleware doesn't *need* to return Bool - never used. Should we remove it?

Re-think middleware pipeline processing -> maybe have a pipeline for each type of response?

TODO: Move the app-restarting into separate thread which checks every X secs

Logging filter with reqId, SessId and configurable userId

Create an afBedSheetProtection pod, based on Rubys Rack::Protection



Meh - Can't be arsed!
=====================
Have BeforeRoutes and AfterRoutes, put in RoutesMiddleware so other Middleware still do "Before: Routes"
 - Use case??
 - I only want it 'cos Sinatra has it!

Create a Units class:
	static Void main(Str[] args) {
		kB := Unit.fromStr("kB")
		b := Unit.fromStr("byte")
	
		size := kB.convertTo(3f, b)
		Env.cur.err.printLine(size)
	}

Make MethodCallResponseProcessor configurable so it can call other types of classes
 - e.g. Pillow event methods
 - But man, that's a bucket load of work! And with no use case - it's not worth it!  

Contribute ranges to HttpStatusProcessor?? - Naa, can't be arsed. Use case?

Inspect the 'accept' headers to ensure the client likes what we're about to send back, send 406 otherwise
 - HTTP 1.1 says we MAY, as the client can make the final decision themselves
 - Also, if the 406 spec says we need to encode the alternatives in the response, but in an entity in the body...!?



Doc Comments
------------
Play on words from Tapestry, and Fantom ghosty wears a BedSheet! Wot Fantom wears!

"A web app framework that gets you horizontal. What's your favourite position?"

horizonal not vertical - other frameworks make you extend their classes, not BedSheet.


Powerful.
Built in a modular way with [afIoc]`http://repo.status302.com/doc/afIoc/#overview` meaning every service maybe wrapped,
decorated, replaced or deleted! It makes hard tasks, easy.

Flexible.
Show a developer a really cool feature and the first response is usually, "Wow, that's awewome! ... But how do I turn it off?"
With that in mind, BedSheet is reluctant

Simple.
Developers are lazy. If it's complicated or difficult, they won't use it.

